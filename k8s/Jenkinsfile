pipeline {
  agent any
  stages {
    stage('build') {
      steps {
        sh 'dotnet restore'
        sh 'dotnet build'
      }
    }
    stage('publish') {
      steps {
        sh 'dotnet publish src/${ACB_PROJECT}/${ACB_PROJECT}.csproj -c Release -o ./bin/publish'
      }
    }
    stage('docker') {
      steps {
        sh '(docker rm -f ${ACB_IMAGE_NAME} && docker rmi ${ACB_IMAGE_NAME}) || echo \'image \'${ACB_IMAGE_NAME}\' not exist\''
        sh 'docker build -t ${ACB_IMAGE_NAME} ./src/${ACB_PROJECT}/bin/publish/'
        sh 'docker run --name=${ACB_IMAGE_NAME} --restart=always -e ACB_MODE=${ACB_MODE} -p ${ACB_DOCKER_PORT}:5000 -d ${ACB_IMAGE_NAME}'
      }
    }
    stage('k8s') {
        steps {
        }
    }
  }
  environment {
    ACB_PROJECT = 'BiddingInsurance'
    ACB_IMAGE_NAME = 'bidding-insurance'
    ACB_MODE = 'Test'
    ACB_DOCKER_PORT = 6501
  }
}
